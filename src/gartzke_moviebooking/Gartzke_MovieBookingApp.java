/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gartzke_moviebooking;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.io.PrintWriter;
import javax.print.Doc;
import javax.swing.JComboBox;
import javax.swing.text.Document;
import TheMoviePerson.*;
/**
 *
 * @author Peter Foster Gartzke
 */
public class Gartzke_MovieBookingApp extends javax.swing.JFrame  {
 private TheArrayList amazing; //allows me to store data into an array then into a text file
  private   String theItem=""; //is used to user input into a string to then be used in a text file
   private  String theTime=""; // stores the user input for the movie time they selected into a string
   private String thePhoneNumber=""; //stores user input for phone number into a string
  private   String theName="";
  private   int theSeats;
 
 private String theMovieBooking="";
   private String thePizzaSize;
  private String thePopcornSize;
    private String theDrinkSize;
    private double pizzaSize;
     private double popcornSize;
      private double sodaSize;
      private double elderlyTicketCost;
      private double childrenTicketCost;
      private double adultTicketCost;
      private double totalTicketCost;
     private double totalFoodCost;
      private double totalFoodCostWithDiscount;
     
     private String theTrueSeats;
    
     private double totalCost;
    private   double theAdultValue;
   private  double theElderlyValue;
     private double theChildrenValue;
 private String s;
 
    /**
     * Creates new form Gartzke_MovieBookingApp
     */
    public Gartzke_MovieBookingApp() throws FileNotFoundException{
        initComponents();
        amazing=new TheArrayList();
    amazing.TextFileToArrayList();
  
  
    
    
    }
  
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PhoneNumber = new javax.swing.JLabel();
        PhoneNumberEnter = new javax.swing.JTextField();
        Name = new javax.swing.JLabel();
        NameEnter = new javax.swing.JTextField();
        MovieListBox = new javax.swing.JComboBox<>();
        MovieList = new javax.swing.JLabel();
        MovieTimeBox = new javax.swing.JComboBox<>();
        MovieTime = new javax.swing.JLabel();
        FoodSelect = new javax.swing.JLabel();
        Popcorn = new javax.swing.JRadioButton();
        PopcornSize = new javax.swing.JComboBox<>();
        Pizza = new javax.swing.JRadioButton();
        PizzaType = new javax.swing.JComboBox<>();
        Soda = new javax.swing.JRadioButton();
        SodaType = new javax.swing.JComboBox<>();
        Tickets = new javax.swing.JLabel();
        AdultInput = new javax.swing.JTextField();
        ChildrenInput = new javax.swing.JTextField();
        ElderlyInput = new javax.swing.JTextField();
        SeatReserve = new javax.swing.JLabel();
        SeatPane = new javax.swing.JScrollPane();
        Seat = new javax.swing.JList<>();
        PriceTotal = new javax.swing.JLabel();
        PriceTotalShow = new javax.swing.JLabel();
        Submit = new javax.swing.JButton();
        OrderDelete = new javax.swing.JLabel();
        Delete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        EnterAdult = new javax.swing.JButton();
        EnterChild = new javax.swing.JButton();
        EnterElderly = new javax.swing.JButton();
        DeleteThis = new javax.swing.JTextField();
        ViewScroll = new javax.swing.JScrollPane();
        ViewArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        TotalPriceShow = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PhoneNumber.setText("Please enter your phone number:");

        Name.setText("Please enter your name:");

        MovieListBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Top Gun", "Live Free or Die Hard", "The Notebook", "Hangover" }));
        MovieListBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MovieListBoxActionPerformed(evt);
            }
        });

        MovieList.setText("Please select a Movie you'd like to see:");

        MovieTimeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MovieTimeBoxActionPerformed(evt);
            }
        });

        MovieTime.setText("Please select a movie time for your movie to see:");

        FoodSelect.setText("Please Select the food you'd would like to get:");

        Popcorn.setText("Popcorn");
        Popcorn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PopcornActionPerformed(evt);
            }
        });

        PopcornSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PopcornSizeActionPerformed(evt);
            }
        });

        Pizza.setText("Pizza");
        Pizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PizzaActionPerformed(evt);
            }
        });

        PizzaType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PizzaTypeActionPerformed(evt);
            }
        });

        Soda.setText("Soda");
        Soda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SodaActionPerformed(evt);
            }
        });

        SodaType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SodaTypeActionPerformed(evt);
            }
        });

        Tickets.setText("Please enter the number of tickets for adults: adults pay regular price for food");

        AdultInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdultInputActionPerformed(evt);
            }
        });

        ChildrenInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChildrenInputActionPerformed(evt);
            }
        });

        ElderlyInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ElderlyInputActionPerformed(evt);
            }
        });

        SeatReserve.setText("Seats you'd like to reserve:");

        Seat.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Seat 1", "Seat 2", "Seat 3", "Seat 4", "Seat 5", "Seat 6", "Seat 7", "Seat 8", "Seat 9", "Seat 10" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        SeatPane.setViewportView(Seat);

        PriceTotal.setText("The Toal price is:");

        Submit.setText("Submit");
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });

        OrderDelete.setText("Please enter the name of the thing you want to  Delete previous/undo previous orders:");

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        jLabel1.setText("View movie booking orders:");

        jButton1.setText("View");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        EnterAdult.setText("Confirmation");
        EnterAdult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnterAdultActionPerformed(evt);
            }
        });

        EnterChild.setText("Confirmation");
        EnterChild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnterChildActionPerformed(evt);
            }
        });

        EnterElderly.setText("Confirmation");
        EnterElderly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnterElderlyActionPerformed(evt);
            }
        });

        DeleteThis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteThisActionPerformed(evt);
            }
        });

        ViewArea.setColumns(20);
        ViewArea.setRows(5);
        ViewScroll.setViewportView(ViewArea);

        jLabel2.setText("please enter the number of tickets for elderly: elderly get $0.03 off each total food price:");

        jLabel3.setText(" please enter the number of tickets for children: children get $0.05 off each total food price");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(ElderlyInput, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(EnterElderly))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(PriceTotal)
                                    .addComponent(PriceTotalShow, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(TotalPriceShow, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(301, 301, 301)
                                .addComponent(Submit))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(SeatReserve, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SeatPane, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(FoodSelect)
                                .addGap(37, 37, 37)
                                .addComponent(Popcorn)
                                .addGap(18, 18, 18)
                                .addComponent(PopcornSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(MovieTime)
                                        .addGap(32, 32, 32)
                                        .addComponent(MovieTimeBox, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(MovieList)
                                        .addGap(36, 36, 36)
                                        .addComponent(MovieListBox, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(87, 87, 87)
                                        .addComponent(OrderDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(DeleteThis, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(28, 28, 28)
                                        .addComponent(Delete))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(Name)
                                                .addGap(64, 64, 64)
                                                .addComponent(NameEnter, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(PhoneNumber)
                                                .addGap(29, 29, 29)
                                                .addComponent(PhoneNumberEnter, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(444, 444, 444)
                                        .addComponent(ViewScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(25, Short.MAX_VALUE))))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(ChildrenInput, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(EnterChild)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(Tickets)
                            .addGap(38, 38, 38)
                            .addComponent(AdultInput, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(45, 45, 45)
                            .addComponent(EnterAdult))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(Pizza)
                            .addGap(18, 18, 18)
                            .addComponent(PizzaType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(33, 33, 33)
                            .addComponent(Soda)
                            .addGap(26, 26, 26)
                            .addComponent(SodaType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(28, 28, 28)
                .addComponent(jButton1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(Name)
                                            .addComponent(NameEnter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(45, 45, 45))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(7, 7, 7)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel1)
                                            .addComponent(jButton1))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(PhoneNumber)
                                    .addComponent(PhoneNumberEnter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(ViewScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(MovieList)
                                    .addComponent(MovieListBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(OrderDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DeleteThis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Delete))))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MovieTime)
                            .addComponent(MovieTimeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FoodSelect)
                            .addComponent(Popcorn)
                            .addComponent(PopcornSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Pizza)
                            .addComponent(PizzaType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Soda)
                            .addComponent(SodaType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Tickets)
                            .addComponent(AdultInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EnterAdult))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ChildrenInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EnterChild))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(ElderlyInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EnterElderly))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SeatReserve)
                                    .addComponent(SeatPane, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(62, 62, 62)
                                .addComponent(PriceTotal))
                            .addComponent(Submit, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(TotalPriceShow, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(PriceTotalShow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PopcornActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PopcornActionPerformed
      if(Popcorn.isSelected()==true){
          PopcornSize.addItem("Small");
            PopcornSize.addItem("Medium");
              PopcornSize.addItem("Large");
              if(PopcornSize.getSelectedItem()=="Small"){
                  popcornSize= 1.50;
              }
               if(PopcornSize.getSelectedItem()=="Medium"){
                  popcornSize= 2.75;
              }
                if(PopcornSize.getSelectedItem()=="Large"){
                  popcornSize= 4.00;
              }
      }
    }//GEN-LAST:event_PopcornActionPerformed

    private void AdultInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdultInputActionPerformed
         
    }//GEN-LAST:event_AdultInputActionPerformed

    private void ChildrenInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChildrenInputActionPerformed
         
    }//GEN-LAST:event_ChildrenInputActionPerformed

  
    private void ElderlyInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ElderlyInputActionPerformed
       MoviePerson[] manyMonsters = new MoviePerson[3];
        
        manyMonsters[0]= new Elderly();
       
       
         
              manyMonsters[0].speak();
    }//GEN-LAST:event_ElderlyInputActionPerformed

    private void MovieListBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MovieListBoxActionPerformed
        if (MovieListBox.getSelectedItem()== "Top Gun") {
  MovieTimeBox.addItem("9:00AM");
   MovieTimeBox.addItem("12:00PM");
   MovieTimeBox.addItem("1:00PM");
   MovieTimeBox.addItem("2:00PM");
    MovieTimeBox.removeItem("9:15AM");
   MovieTimeBox.removeItem("12:15PM");
     MovieTimeBox.removeItem("1:15PM");
   MovieTimeBox.removeItem("2:15PM");
    MovieTimeBox.removeItem("1:30PM");
   MovieTimeBox.removeItem("2:30PM");
   MovieTimeBox.removeItem("3:30PM");
   MovieTimeBox.removeItem("5:30PM");
   
                    
                    
                    theItem="Top Gun";
                    theItem=theItem.toLowerCase();
                 
   
  
}
else if (MovieListBox.getSelectedItem()== "Live Free or Die Hard") {
    MovieTimeBox.addItem("9:15AM");
   MovieTimeBox.addItem("12:15PM");
     MovieTimeBox.addItem("1:15PM");
   MovieTimeBox.addItem("2:15PM");
   MovieTimeBox.removeItem("9:00AM");
   MovieTimeBox.removeItem("12:00PM");
   MovieTimeBox.removeItem("1:00PM");
   MovieTimeBox.removeItem("2:00PM");
    MovieTimeBox.removeItem("1:30PM");
   MovieTimeBox.removeItem("2:30PM");
   MovieTimeBox.removeItem("3:30PM");
   MovieTimeBox.removeItem("5:30PM");
   theItem="Live Free or Die Hard";
                    theItem=theItem.toLowerCase();
}
else if (MovieListBox.getSelectedItem()== "The Notebook") {
  MovieTimeBox.addItem("9:00AM");
   MovieTimeBox.addItem("12:00PM");
      MovieTimeBox.addItem("1:30PM");
   MovieTimeBox.addItem("2:30PM");
    MovieTimeBox.removeItem("9:15AM");
   MovieTimeBox.removeItem("12:15PM");
     MovieTimeBox.removeItem("1:15PM");
   MovieTimeBox.removeItem("2:15PM");
     MovieTimeBox.removeItem("1:00PM");
   MovieTimeBox.removeItem("2:00PM");
    MovieTimeBox.removeItem("3:30PM");
   MovieTimeBox.removeItem("5:30PM");
    theItem="The Notebook";
                    theItem=theItem.toLowerCase();
}
else  {
  MovieTimeBox.addItem("9:00AM");
   MovieTimeBox.addItem("12:00PM");
      MovieTimeBox.addItem("3:30PM");
   MovieTimeBox.addItem("5:30PM");
     MovieTimeBox.removeItem("9:15AM");
   MovieTimeBox.removeItem("12:15PM");
     MovieTimeBox.removeItem("1:15PM");
   MovieTimeBox.removeItem("2:15PM");
     MovieTimeBox.removeItem("1:00PM");
   MovieTimeBox.removeItem("2:00PM");
    MovieTimeBox.removeItem("1:30PM");
   MovieTimeBox.removeItem("2:30PM");
   theItem="Hangover";
                    theItem=theItem.toLowerCase();
}
    }//GEN-LAST:event_MovieListBoxActionPerformed

    private void EnterAdultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnterAdultActionPerformed
         
        MoviePerson[] manyMonsters = new MoviePerson[3];
        
        manyMonsters[0]= new MoviePerson();
       
       
         
              manyMonsters[0].speak();
              Scanner theScan = new Scanner(System.in);
          String input = AdultInput.getText();
          theAdultValue = Double.parseDouble(input);
              
                    adultTicketCost= theAdultValue * MoviePerson.TicketPrice;
                    
              
    }//GEN-LAST:event_EnterAdultActionPerformed

    private void EnterChildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnterChildActionPerformed
       MoviePerson[] manyMonsters = new MoviePerson[3];
        
        manyMonsters[0]= new Child();
       
       
         
              manyMonsters[0].speak();
               Scanner theScan = new Scanner(System.in);
          String input = ChildrenInput.getText();
           theChildrenValue = Double.parseDouble(input);
              
                    childrenTicketCost= theChildrenValue * MoviePerson.TicketPrice;
    }//GEN-LAST:event_EnterChildActionPerformed

    private void EnterElderlyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnterElderlyActionPerformed
       MoviePerson[] manyMonsters = new MoviePerson[3];
        
        manyMonsters[0]= new Elderly();
       
       
         
              manyMonsters[0].speak();
               Scanner theScan = new Scanner(System.in);
          String input = ElderlyInput.getText();
           theElderlyValue = Double.parseDouble(input);
              
                    elderlyTicketCost= theElderlyValue * MoviePerson.TicketPrice;
    }//GEN-LAST:event_EnterElderlyActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed


     String file = "MovieBookings.txt";
BufferedReader in = null;
     try {
         in = new BufferedReader(new FileReader(file));
     } catch (FileNotFoundException ex) {
         Logger.getLogger(Gartzke_MovieBookingApp.class.getName()).log(Level.SEVERE, null, ex);
     }
String line = null;
     try {
         line = in.readLine();
     } catch (IOException ex) {
         Logger.getLogger(Gartzke_MovieBookingApp.class.getName()).log(Level.SEVERE, null, ex);
     }
while(line != null){
  ViewArea.append(line + "\n");
         try {
             line = in.readLine();
         } catch (IOException ex) {
             Logger.getLogger(Gartzke_MovieBookingApp.class.getName()).log(Level.SEVERE, null, ex);
         }
}
    
        
             
         
    
  

    }//GEN-LAST:event_jButton1ActionPerformed

    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
        
       theSeats=  Seat.getMaxSelectionIndex() +1;
      theTrueSeats= (" " + theSeats+" Seats Reserved ");
      theTrueSeats=theTrueSeats.toLowerCase();
      thePhoneNumber= PhoneNumberEnter.getText();
           thePhoneNumber=thePhoneNumber.toLowerCase();
            theName= NameEnter.getText();
           theName=theName.toLowerCase();
               totalTicketCost=  adultTicketCost + childrenTicketCost + elderlyTicketCost; 
               totalFoodCost= sodaSize + pizzaSize + popcornSize;
               totalFoodCostWithDiscount= totalFoodCost-((theElderlyValue*Elderly.FoodDeduction)+(theChildrenValue*Child.FoodDeduction));
               totalCost= totalTicketCost +   totalFoodCostWithDiscount;
               String total2 = String.valueOf(totalCost);
               TotalPriceShow.setText(total2);
                  theMovieBooking= theItem + theTime+ theTrueSeats + totalCost+ theName + thePhoneNumber;
                    amazing.addItem(theMovieBooking);
                   
                   
     try {
         amazing.ArrayListToTextFile();
     } catch (IOException ex) {
         Logger.getLogger(Gartzke_MovieBookingApp.class.getName()).log(Level.SEVERE, null, ex);
     }
    }//GEN-LAST:event_SubmitActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
         Scanner theScan = new Scanner(System.in);
          String input = DeleteThis.getText();
          
              
                    theMovieBooking= input;
                    theMovieBooking=theMovieBooking.toLowerCase();
                    amazing.removeItem(theMovieBooking);
     try {
         amazing.ArrayListToTextFile();
     } catch (IOException ex) {
         Logger.getLogger(Gartzke_MovieBookingApp.class.getName()).log(Level.SEVERE, null, ex);
     }
      
                    
   
    }//GEN-LAST:event_DeleteActionPerformed

    private void DeleteThisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteThisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeleteThisActionPerformed

    private void MovieTimeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MovieTimeBoxActionPerformed
        // TODO add your handling code here:
        if (MovieTimeBox.getSelectedItem()== "9:00AM" && MovieListBox.getSelectedItem()== "Top Gun") {
            theTime="9:00AM";
                    theTime=theTime.toLowerCase();
        }
                if (MovieTimeBox.getSelectedItem()== "12:00PM" && MovieListBox.getSelectedItem()== "Top Gun") {
            theTime="12:00PM";
                    theTime=theTime.toLowerCase(); 
                }
                      if (MovieTimeBox.getSelectedItem()== "1:00PM" && MovieListBox.getSelectedItem()== "Top Gun") {
            theTime="1:00PM";
                    theTime=theTime.toLowerCase(); 
                      }
                     if (MovieTimeBox.getSelectedItem()== "2:00PM" && MovieListBox.getSelectedItem()== "Top Gun") {
            theTime="2:00PM";
                    theTime=theTime.toLowerCase(); 
                     }
                          if (MovieTimeBox.getSelectedItem()== "9:15AM" && MovieListBox.getSelectedItem()== "Live Free or Die Hard") {
            theTime="9:15AM";
                    theTime=theTime.toLowerCase(); 
                     }
                          if (MovieTimeBox.getSelectedItem()== "12:15PM" && MovieListBox.getSelectedItem()== "Live Free or Die Hard") {
            theTime="12:15PM";
                    theTime=theTime.toLowerCase(); 
                     }
                            if (MovieTimeBox.getSelectedItem()== "1:15PM" && MovieListBox.getSelectedItem()== "Live Free or Die Hard") {
            theTime="1:15PM";
                    theTime=theTime.toLowerCase(); 
                     }
                              if (MovieTimeBox.getSelectedItem()== "2:15PM" && MovieListBox.getSelectedItem()== "Live Free or Die Hard") {
            theTime="2:15PM";
                    theTime=theTime.toLowerCase(); 
                     }
                                if (MovieTimeBox.getSelectedItem()== "9:00AM" && MovieListBox.getSelectedItem()== "The Notebook") {
            theTime="9:00AM";
                    theTime=theTime.toLowerCase(); 
                     }
                                 if (MovieTimeBox.getSelectedItem()== "12:00PM" && MovieListBox.getSelectedItem()== "The Notebook") {
            theTime="12:00PM";
                    theTime=theTime.toLowerCase(); 
                     }
                                   if (MovieTimeBox.getSelectedItem()== "1:30PM" && MovieListBox.getSelectedItem()== "The Notebook") {
            theTime="1:30PM";
                    theTime=theTime.toLowerCase(); 
                     }
                                     if (MovieTimeBox.getSelectedItem()== "2:30PM" && MovieListBox.getSelectedItem()== "The Notebook") {
            theTime="2:30PM";
                    theTime=theTime.toLowerCase(); 
                     }
                                      if (MovieTimeBox.getSelectedItem()== "9:00AM" && MovieListBox.getSelectedItem()== "Hangover") {
            theTime="9:00AM";
                    theTime=theTime.toLowerCase(); 
                     }
                                       if (MovieTimeBox.getSelectedItem()== "12:00PM" && MovieListBox.getSelectedItem()== "Hangover") {
            theTime="12:00PM";
                    theTime=theTime.toLowerCase(); 
                     }
                                         if (MovieTimeBox.getSelectedItem()== "3:30PM" && MovieListBox.getSelectedItem()== "Hangover") {
            theTime="3:30PM";
                    theTime=theTime.toLowerCase(); 
                     }
                                          if (MovieTimeBox.getSelectedItem()== "5:30PM" && MovieListBox.getSelectedItem()== "Hangover") {
            theTime="5:30PM";
                    theTime=theTime.toLowerCase(); 
                     }
                          
        
                      
                
  
    }//GEN-LAST:event_MovieTimeBoxActionPerformed

    private void PopcornSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PopcornSizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PopcornSizeActionPerformed

    private void PizzaTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PizzaTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PizzaTypeActionPerformed

    private void PizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PizzaActionPerformed
        if(Pizza.isSelected()==true){
          PizzaType.addItem("Small");
            PizzaType.addItem("Medium");
              PizzaType.addItem("Large");}
              if(PizzaType.getSelectedItem()=="Small"){
                  pizzaSize= 4;
              }
               if(PizzaType.getSelectedItem()=="Medium"){
                  pizzaSize= 7;
              }
                if(PizzaType.getSelectedItem()=="Large"){
                  pizzaSize= 10;
              }
              
      
    }//GEN-LAST:event_PizzaActionPerformed

    private void SodaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SodaActionPerformed
       if(Soda.isSelected()==true){
          SodaType.addItem("Small");
            SodaType.addItem("Medium");
              SodaType.addItem("Large");
               if(SodaType.getSelectedItem()=="Small"){
                  sodaSize= 0.50;
              }
               if(SodaType.getSelectedItem()=="Medium"){
                  sodaSize= 0.99;
              }
                if(SodaType.getSelectedItem()=="Large"){
                  sodaSize= 1.50;
              }
       }
    }//GEN-LAST:event_SodaActionPerformed

    private void SodaTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SodaTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SodaTypeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])throws FileNotFoundException, IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gartzke_MovieBookingApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gartzke_MovieBookingApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gartzke_MovieBookingApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gartzke_MovieBookingApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new Gartzke_MovieBookingApp().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Gartzke_MovieBookingApp.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AdultInput;
    private javax.swing.JTextField ChildrenInput;
    private javax.swing.JButton Delete;
    private javax.swing.JTextField DeleteThis;
    private javax.swing.JTextField ElderlyInput;
    private javax.swing.JButton EnterAdult;
    private javax.swing.JButton EnterChild;
    private javax.swing.JButton EnterElderly;
    private javax.swing.JLabel FoodSelect;
    private javax.swing.JLabel MovieList;
    private javax.swing.JComboBox<String> MovieListBox;
    private javax.swing.JLabel MovieTime;
    private javax.swing.JComboBox<String> MovieTimeBox;
    private javax.swing.JLabel Name;
    private javax.swing.JTextField NameEnter;
    private javax.swing.JLabel OrderDelete;
    private javax.swing.JLabel PhoneNumber;
    private javax.swing.JTextField PhoneNumberEnter;
    private javax.swing.JRadioButton Pizza;
    private javax.swing.JComboBox<String> PizzaType;
    private javax.swing.JRadioButton Popcorn;
    private javax.swing.JComboBox<String> PopcornSize;
    private javax.swing.JLabel PriceTotal;
    private javax.swing.JLabel PriceTotalShow;
    private javax.swing.JList<String> Seat;
    private javax.swing.JScrollPane SeatPane;
    private javax.swing.JLabel SeatReserve;
    private javax.swing.JRadioButton Soda;
    private javax.swing.JComboBox<String> SodaType;
    private javax.swing.JButton Submit;
    private javax.swing.JLabel Tickets;
    private javax.swing.JLabel TotalPriceShow;
    private javax.swing.JTextArea ViewArea;
    private javax.swing.JScrollPane ViewScroll;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
